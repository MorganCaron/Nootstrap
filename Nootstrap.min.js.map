{"version":3,"sources":["webpack://nootstrap-ui/./src/ts/Nootstrap.ts"],"names":["this","updateParallax","window","addEventListener","onWindowResize","bind","onWindowScroll","document","querySelectorAll","forEach","button","event","onTriggerClick","parallax","parallaxTop","getBoundingClientRect","top","parallaxLeft","left","background","querySelector","setAttribute","element","hasAttribute","preventDefault","targetSelector","getAttribute","targets","addClass","split","removeClass","toggleClass","target","classname","classList","add","remove","toggle","Nootstrap"],"mappings":"uBAAA,eACC,wBACCA,KAAKC,iBAELC,OAAOC,iBAAiB,SAAUH,KAAKI,eAAeC,KAAKL,OAAO,GAClEE,OAAOC,iBAAiB,SAAUH,KAAKM,eAAeD,KAAKL,OAAO,GAClEO,SAASC,iBAAiB,qBAAqBC,SAAQ,SAAAC,GAAU,OAAAA,EAAOP,iBAAiB,SAAS,SAAAQ,GAAS,SAAKC,eAAeF,EAAQC,MAAQ,MAoCjJ,OAjCC,YAAAV,eAAA,WACCM,SAASC,iBAAiB,aAAaC,SAAQ,SAAAI,GAC9C,IAAMC,EAAcD,EAASE,wBAAwBC,IAC/CC,EAAeJ,EAASE,wBAAwBG,KAChDC,EAAaN,EAASO,cAAc,wBAC1CD,WAAYE,aAAa,QAAS,UAAYJ,EAAe,aAAeH,EAAc,EAAI,WAIhG,YAAAV,eAAA,WACCJ,KAAKC,kBAGN,YAAAK,eAAA,WACCN,KAAKC,kBAGN,YAAAW,eAAA,SAAeU,EAAkBX,G,UAGhC,GAFIW,EAAQC,aAAa,mBACxBZ,EAAMa,iBACFF,EAAQC,aAAa,kBAA1B,CAEA,IAAME,EAAiBH,EAAQI,aAAa,kBACtCC,EAAUpB,SAASC,iBAAiBiB,GACpCG,EAA4C,QAAjC,EAAAN,EAAQI,aAAa,oBAAY,eAAEG,MAAM,KACpDC,EAAkD,QAApC,EAAAR,EAAQI,aAAa,uBAAe,eAAEG,MAAM,KAC1DE,EAAkD,QAApC,EAAAT,EAAQI,aAAa,uBAAe,eAAEG,MAAM,KAChEF,EAAQlB,SAAQ,SAAAuB,GACXJ,GAAUA,EAASnB,SAAQ,SAAAwB,GAAa,OAAAD,EAAOE,UAAUC,IAAIF,MAC7DH,GAAaA,EAAYrB,SAAQ,SAAAwB,GAAa,OAAAD,EAAOE,UAAUE,OAAOH,MACtEF,GAAaA,EAAYtB,SAAQ,SAAAwB,GAAa,OAAAD,EAAOE,UAAUG,OAAOJ,WAG7E,EA1CA,GA4CA/B,OAAOC,iBAAiB,QAAQ,WACb,IAAImC,KACpB,I","file":"Nootstrap.min.js","sourcesContent":["class Nootstrap {\n\tconstructor() {\n\t\tthis.updateParallax()\n\n\t\twindow.addEventListener('resize', this.onWindowResize.bind(this), false)\n\t\twindow.addEventListener('scroll', this.onWindowScroll.bind(this), false)\n\t\tdocument.querySelectorAll('*[trigger-target]').forEach(button => button.addEventListener('click', event => this.onTriggerClick(button, event), false));\n\t}\n\n\tupdateParallax(): void {\n\t\tdocument.querySelectorAll('.parallax').forEach(parallax => {\n\t\t\tconst parallaxTop = parallax.getBoundingClientRect().top\n\t\t\tconst parallaxLeft = parallax.getBoundingClientRect().left\n\t\t\tconst background = parallax.querySelector('.parallax-background')\n\t\t\tbackground?.setAttribute('style', 'left: ' + -parallaxLeft + 'px; top: ' + -parallaxTop / 2 + 'px;')\n\t\t})\n\t}\n\n\tonWindowResize(): void {\n\t\tthis.updateParallax()\n\t}\n\n\tonWindowScroll(): void {\n\t\tthis.updateParallax()\n\t}\n\n\tonTriggerClick(element: Element, event: Event): void {\n\t\tif (element.hasAttribute('preventDefault'))\n\t\t\tevent.preventDefault()\n\t\tif (!element.hasAttribute('trigger-target'))\n\t\t\treturn;\n\t\tconst targetSelector = element.getAttribute('trigger-target')\n\t\tconst targets = document.querySelectorAll(targetSelector as string)\n\t\tconst addClass = element.getAttribute('add-class')?.split(' ')\n\t\tconst removeClass = element.getAttribute('remove-class')?.split(' ')\n\t\tconst toggleClass = element.getAttribute('toggle-class')?.split(' ')\n\t\ttargets.forEach(target => {\n\t\t\tif (addClass) addClass.forEach(classname => target.classList.add(classname))\n\t\t\tif (removeClass) removeClass.forEach(classname => target.classList.remove(classname))\n\t\t\tif (toggleClass) toggleClass.forEach(classname => target.classList.toggle(classname))\n\t\t})\n\t}\n}\n\nwindow.addEventListener('load', () => {\n\tconst nootstrap = new Nootstrap()\n}, false)\n"],"sourceRoot":""}