{"version":3,"sources":["webpack://nootstrap-ui/./src/ts/Nootstrap.ts"],"names":["this","updateParallax","window","addEventListener","onWindowResize","bind","onWindowScroll","document","querySelectorAll","forEach","button","event","onToggleClassClicked","parallax","parallaxTop","getBoundingClientRect","top","parallaxLeft","left","background","querySelector","setAttribute","element","preventDefault","targetSelector","getAttribute","targetValue","console","error","target","classList","toggle","Nootstrap"],"mappings":"mBAAA,iBACC,wBACCA,KAAKC,iBAELC,OAAOC,iBAAiB,SAAUH,KAAKI,eAAeC,KAAKL,OAAO,GAClEE,OAAOC,iBAAiB,SAAUH,KAAKM,eAAeD,KAAKL,OAAO,GAClEO,SAASC,iBAAiB,yBAAyBC,SAAQ,SAAAC,GAAU,OAAAA,EAAOP,iBAAiB,SAAS,SAAAQ,GAAS,SAAKC,qBAAqBF,EAAQC,MAAQ,MA+B3J,OA5BC,YAAAV,eAAA,WACCM,SAASC,iBAAiB,aAAaC,SAAQ,SAAAI,GAC9C,IAAMC,EAAcD,EAASE,wBAAwBC,IAC/CC,EAAeJ,EAASE,wBAAwBG,KAChDC,EAAaN,EAASO,cAAc,wBAC1CD,WAAYE,aAAa,QAAS,UAAYJ,EAAe,aAAeH,EAAc,EAAI,WAIhG,YAAAV,eAAA,WACCJ,KAAKC,kBAGN,YAAAK,eAAA,WACCN,KAAKC,kBAGN,YAAAW,qBAAA,SAAqBU,EAAkBX,GACtCA,EAAMY,iBACN,IAAMC,EAAiBF,EAAQG,aAAa,sBACtCC,EAAcJ,EAAQG,aAAa,qBAClB,OAAnBD,GAA8C,KAAnBA,GAC9BG,QAAQC,MAAM,yCACK,OAAhBF,GAAwC,KAAhBA,EAC3BC,QAAQC,MAAM,mDAEdrB,SAASC,iBAAiBgB,GAA0Bf,SAAQ,SAAAoB,GAAU,OAAAA,EAAOC,UAAUC,OAAOL,OAEjG,EArCA,GAuCAxB,OAAOC,iBAAiB,QAAQ,WACb,IAAI6B,KACpB,I","file":"Nootstrap.min.js","sourcesContent":["class Nootstrap {\n\tconstructor() {\n\t\tthis.updateParallax()\n\n\t\twindow.addEventListener('resize', this.onWindowResize.bind(this), false)\n\t\twindow.addEventListener('scroll', this.onWindowScroll.bind(this), false)\n\t\tdocument.querySelectorAll('*[toggleClass-target]').forEach(button => button.addEventListener('click', event => this.onToggleClassClicked(button, event), false));\n\t}\n\n\tupdateParallax(): void {\n\t\tdocument.querySelectorAll('.parallax').forEach(parallax => {\n\t\t\tconst parallaxTop = parallax.getBoundingClientRect().top\n\t\t\tconst parallaxLeft = parallax.getBoundingClientRect().left\n\t\t\tconst background = parallax.querySelector('.parallax-background')\n\t\t\tbackground?.setAttribute('style', 'left: ' + -parallaxLeft + 'px; top: ' + -parallaxTop / 2 + 'px;')\n\t\t})\n\t}\n\n\tonWindowResize(): void {\n\t\tthis.updateParallax()\n\t}\n\n\tonWindowScroll(): void {\n\t\tthis.updateParallax()\n\t}\n\n\tonToggleClassClicked(element: Element, event: Event): void {\n\t\tevent.preventDefault()\n\t\tconst targetSelector = element.getAttribute('toggleClass-target')\n\t\tconst targetValue = element.getAttribute('toggleClass-value')\n\t\tif (targetSelector === null || targetSelector === '')\n\t\t\tconsole.error('toggleClass-target attribute is empty')\n\t\tif (targetValue === null || targetValue === '')\n\t\t\tconsole.error('toggleClass-value attribute is empty or missing')\n\t\telse\n\t\t\tdocument.querySelectorAll(targetSelector as string).forEach(target => target.classList.toggle(targetValue))\n\t}\n}\n\nwindow.addEventListener('load', () => {\n\tconst nootstrap = new Nootstrap()\n}, false)\n"],"sourceRoot":""}